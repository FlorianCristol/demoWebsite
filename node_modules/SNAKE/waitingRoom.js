var aController = require('SNAKE/controller.js');
module.exports = WaitingRoom;

function WaitingRoom(io) {

	this.numberOfUsers = 0;
	this.hello = "This is sparta " + this.numberOfUsers;
	this.io = io;
	this.users = Â  [];
	this.controllers = [];
	this.playingTogether = [];
	this.waitingToPlay = [];
	this.loneUser = 0
}
WaitingRoom.prototype.returnHello = function() {
	return this.hello;
}
WaitingRoom.prototype.oneMoreUser = function(name, socket) {
	var userExists = false;
	for (var i = 0; i < this.numberOfUsers; i++) {
		if (this.users[i].socket.id === socket.id) {
			userExists = true;
			//console.log("user exists already wtf");
		}
	}
	if (!userExists) {

		++this.numberOfUsers;

		this.users.push({
			socket: socket,
			name: name
		});
		this.waitingToPlay.push(socket);
		if(this.waitingToPlay.length > 1){
			console.log("ID OF FIRST PLAYER: "+this.waitingToPlay[0].id);
			console.log("ID OF SECOND PLAYER: "+this.waitingToPlay[1].id);
			console.log("CREATING NEW GAME");
			this.controllers.push(new aController(60, this.waitingToPlay[0], this.waitingToPlay[1]))

			this.playingTogether.push({
				p1: this.waitingToPlay[0],
				p2: this.waitingToPlay[1]
			});
			this.waitingToPlay.splice(0,2);
		}
	}
	console.log("Number of Users: "+this.numberOfUsers);
}
WaitingRoom.prototype.identify = function(socket) {
	var returnValue = false;
	for (var i = 0; i < this.numberOfUsers; i++) {
		if (this.users[i].socket.id === socket.id) {
			//console.log("USER FOUND");
			returnValue =  true;
		}
	}

	return returnValue;
}



WaitingRoom.prototype.setupSockets = function(socket) {

}
WaitingRoom.prototype.checkIfUsersAlreadyConnected = function(user) {

}
WaitingRoom.prototype.userLost = function(socket) {
	//console.log("user lost");

	for (var i = 0; i < this.controllers.length; i++) {
		var p = this.controllers[i].getPlayers();
		for (var j = 0, max = p.length; j < max; j++)
			if (p[j] === socket.id) {
				this.controllers[i].setRunning(false);
				this.controllers.splice(i, 1);
				console.log("DELETED");
			}
	}
	var toDelete = false;
	for (var i = 0; i < this.numberOfUsers; i++) {
		if (this.users[i].socket.id === socket.id) {
			toDelete = i;
		}
	}
	if (toDelete !== false) {
		console.log("User "+this.users[toDelete].socket.id+" Deleted");
		this.users.splice(toDelete, 1);
			--this.numberOfUsers;
	}
	for(var i = 0 ; i < this.waitingToPlay.length ; i++){
		if(this.waitingToPlay[i].id === socket.id){
			this.waitingToPlay.splice(i,1);
			console.log("Deleted "+socket.id+" from waiting list");
		}
	}


}